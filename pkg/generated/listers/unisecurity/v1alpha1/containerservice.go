// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "./../pkg/apis/unisecurity/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ContainerServiceLister helps list ContainerServices.
// All objects returned here must be treated as read-only.
type ContainerServiceLister interface {
	// List lists all ContainerServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ContainerService, err error)
	// ContainerServices returns an object that can list and get ContainerServices.
	ContainerServices(namespace string) ContainerServiceNamespaceLister
	ContainerServiceListerExpansion
}

// containerServiceLister implements the ContainerServiceLister interface.
type containerServiceLister struct {
	indexer cache.Indexer
}

// NewContainerServiceLister returns a new ContainerServiceLister.
func NewContainerServiceLister(indexer cache.Indexer) ContainerServiceLister {
	return &containerServiceLister{indexer: indexer}
}

// List lists all ContainerServices in the indexer.
func (s *containerServiceLister) List(selector labels.Selector) (ret []*v1alpha1.ContainerService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContainerService))
	})
	return ret, err
}

// ContainerServices returns an object that can list and get ContainerServices.
func (s *containerServiceLister) ContainerServices(namespace string) ContainerServiceNamespaceLister {
	return containerServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ContainerServiceNamespaceLister helps list and get ContainerServices.
// All objects returned here must be treated as read-only.
type ContainerServiceNamespaceLister interface {
	// List lists all ContainerServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ContainerService, err error)
	// Get retrieves the ContainerService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ContainerService, error)
	ContainerServiceNamespaceListerExpansion
}

// containerServiceNamespaceLister implements the ContainerServiceNamespaceLister
// interface.
type containerServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ContainerServices in the indexer for a given namespace.
func (s containerServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ContainerService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContainerService))
	})
	return ret, err
}

// Get retrieves the ContainerService from the indexer for a given namespace and name.
func (s containerServiceNamespaceLister) Get(name string) (*v1alpha1.ContainerService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("containerservice"), name)
	}
	return obj.(*v1alpha1.ContainerService), nil
}
