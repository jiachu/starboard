// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "./../pkg/apis/unisecurity/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// UniSecurityLister helps list UniSecurities.
// All objects returned here must be treated as read-only.
type UniSecurityLister interface {
	// List lists all UniSecurities in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.UniSecurity, err error)
	// UniSecurities returns an object that can list and get UniSecurities.
	UniSecurities(namespace string) UniSecurityNamespaceLister
	UniSecurityListerExpansion
}

// uniSecurityLister implements the UniSecurityLister interface.
type uniSecurityLister struct {
	indexer cache.Indexer
}

// NewUniSecurityLister returns a new UniSecurityLister.
func NewUniSecurityLister(indexer cache.Indexer) UniSecurityLister {
	return &uniSecurityLister{indexer: indexer}
}

// List lists all UniSecurities in the indexer.
func (s *uniSecurityLister) List(selector labels.Selector) (ret []*v1alpha1.UniSecurity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UniSecurity))
	})
	return ret, err
}

// UniSecurities returns an object that can list and get UniSecurities.
func (s *uniSecurityLister) UniSecurities(namespace string) UniSecurityNamespaceLister {
	return uniSecurityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// UniSecurityNamespaceLister helps list and get UniSecurities.
// All objects returned here must be treated as read-only.
type UniSecurityNamespaceLister interface {
	// List lists all UniSecurities in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.UniSecurity, err error)
	// Get retrieves the UniSecurity from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.UniSecurity, error)
	UniSecurityNamespaceListerExpansion
}

// uniSecurityNamespaceLister implements the UniSecurityNamespaceLister
// interface.
type uniSecurityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all UniSecurities in the indexer for a given namespace.
func (s uniSecurityNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.UniSecurity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.UniSecurity))
	})
	return ret, err
}

// Get retrieves the UniSecurity from the indexer for a given namespace and name.
func (s uniSecurityNamespaceLister) Get(name string) (*v1alpha1.UniSecurity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("unisecurity"), name)
	}
	return obj.(*v1alpha1.UniSecurity), nil
}
